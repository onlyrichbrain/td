// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// PaymentsGetUserStarGiftRequest represents TL type `payments.getUserStarGift#b502e4a5`.
//
// See https://core.telegram.org/method/payments.getUserStarGift for reference.
type PaymentsGetUserStarGiftRequest struct {
	// MsgID field of PaymentsGetUserStarGiftRequest.
	MsgID []int
}

// PaymentsGetUserStarGiftRequestTypeID is TL type id of PaymentsGetUserStarGiftRequest.
const PaymentsGetUserStarGiftRequestTypeID = 0xb502e4a5

// Ensuring interfaces in compile-time for PaymentsGetUserStarGiftRequest.
var (
	_ bin.Encoder     = &PaymentsGetUserStarGiftRequest{}
	_ bin.Decoder     = &PaymentsGetUserStarGiftRequest{}
	_ bin.BareEncoder = &PaymentsGetUserStarGiftRequest{}
	_ bin.BareDecoder = &PaymentsGetUserStarGiftRequest{}
)

func (g *PaymentsGetUserStarGiftRequest) Zero() bool {
	if g == nil {
		return true
	}
	if !(g.MsgID == nil) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (g *PaymentsGetUserStarGiftRequest) String() string {
	if g == nil {
		return "PaymentsGetUserStarGiftRequest(nil)"
	}
	type Alias PaymentsGetUserStarGiftRequest
	return fmt.Sprintf("PaymentsGetUserStarGiftRequest%+v", Alias(*g))
}

// FillFrom fills PaymentsGetUserStarGiftRequest from given interface.
func (g *PaymentsGetUserStarGiftRequest) FillFrom(from interface {
	GetMsgID() (value []int)
}) {
	g.MsgID = from.GetMsgID()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*PaymentsGetUserStarGiftRequest) TypeID() uint32 {
	return PaymentsGetUserStarGiftRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*PaymentsGetUserStarGiftRequest) TypeName() string {
	return "payments.getUserStarGift"
}

// TypeInfo returns info about TL type.
func (g *PaymentsGetUserStarGiftRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "payments.getUserStarGift",
		ID:   PaymentsGetUserStarGiftRequestTypeID,
	}
	if g == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "MsgID",
			SchemaName: "msg_id",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (g *PaymentsGetUserStarGiftRequest) Encode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode payments.getUserStarGift#b502e4a5 as nil")
	}
	b.PutID(PaymentsGetUserStarGiftRequestTypeID)
	return g.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (g *PaymentsGetUserStarGiftRequest) EncodeBare(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't encode payments.getUserStarGift#b502e4a5 as nil")
	}
	b.PutVectorHeader(len(g.MsgID))
	for _, v := range g.MsgID {
		b.PutInt(v)
	}
	return nil
}

// Decode implements bin.Decoder.
func (g *PaymentsGetUserStarGiftRequest) Decode(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode payments.getUserStarGift#b502e4a5 to nil")
	}
	if err := b.ConsumeID(PaymentsGetUserStarGiftRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode payments.getUserStarGift#b502e4a5: %w", err)
	}
	return g.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (g *PaymentsGetUserStarGiftRequest) DecodeBare(b *bin.Buffer) error {
	if g == nil {
		return fmt.Errorf("can't decode payments.getUserStarGift#b502e4a5 to nil")
	}
	{
		headerLen, err := b.VectorHeader()
		if err != nil {
			return fmt.Errorf("unable to decode payments.getUserStarGift#b502e4a5: field msg_id: %w", err)
		}

		if headerLen > 0 {
			g.MsgID = make([]int, 0, headerLen%bin.PreallocateLimit)
		}
		for idx := 0; idx < headerLen; idx++ {
			value, err := b.Int()
			if err != nil {
				return fmt.Errorf("unable to decode payments.getUserStarGift#b502e4a5: field msg_id: %w", err)
			}
			g.MsgID = append(g.MsgID, value)
		}
	}
	return nil
}

// GetMsgID returns value of MsgID field.
func (g *PaymentsGetUserStarGiftRequest) GetMsgID() (value []int) {
	if g == nil {
		return
	}
	return g.MsgID
}

// PaymentsGetUserStarGift invokes method payments.getUserStarGift#b502e4a5 returning error if any.
//
// See https://core.telegram.org/method/payments.getUserStarGift for reference.
func (c *Client) PaymentsGetUserStarGift(ctx context.Context, msgid []int) (*PaymentsUserStarGifts, error) {
	var result PaymentsUserStarGifts

	request := &PaymentsGetUserStarGiftRequest{
		MsgID: msgid,
	}
	if err := c.rpc.Invoke(ctx, request, &result); err != nil {
		return nil, err
	}
	return &result, nil
}
